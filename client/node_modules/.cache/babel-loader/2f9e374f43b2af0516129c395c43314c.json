{"ast":null,"code":"import _classCallCheck from \"/Users/AnandsMAC/google-book-search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/AnandsMAC/google-book-search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/AnandsMAC/google-book-search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/AnandsMAC/google-book-search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/AnandsMAC/google-book-search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/AnandsMAC/google-book-search/client/src/pages/SearchBooks.js\";\nimport React, { Component } from \"react\";\nimport API from '../utils/API';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResult from \"../components/SearchResult\";\n\nvar SearchBooks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBooks, _Component);\n\n  function SearchBooks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBooks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: \"\",\n      books: [],\n      author: \"\",\n      error: \"\",\n      message: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        search: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault(); // once it clicks it connects to the google book api with the search value\n\n      API.getGoogleSearchBooks(_this.state.search).then(function (res) {\n        if (res.data.items === \"error\") {\n          throw new Error(res.data.items);\n        } else {\n          // store response in a array\n          var results = res.data.items; //map through the array\n\n          results = results.map(function (result) {\n            //store each book information in a new object\n            result = {\n              key: result.id,\n              id: result.id,\n              title: result.volumeInfo.title,\n              author: result.volumeInfo.authors,\n              description: result.volumeInfo.description,\n              image: result.volumeInfo.imageLinks.thumbnail,\n              link: result.volumeInfo.infoLink\n            };\n            return result;\n          }); // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n\n          _this.setState({\n            books: results,\n            error: \"\"\n          });\n        }\n      }).catch(function (err) {\n        return _this.setState({\n          error: err.items\n        });\n      });\n    };\n\n    _this.handleSavedButton = function (event) {\n      //console.log(event)\n      event.preventDefault();\n      console.log(_this.state.books);\n\n      var savedBooks = _this.state.books.filter(function (book) {\n        return book.id === event.target.id;\n      });\n\n      savedBooks = savedBooks[0];\n      API.saveBook(savedBooks).then(_this.setState({\n        message: alert(\"Your book is saved\")\n      })).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBooks, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"(React) Google Books Search\"), React.createElement(\"h3\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Search for and Save Books of Interest\")), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(SearchForm, {\n        handleFormSubmit: this.handleFormSubmit,\n        handleInputChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(SearchResult, {\n        books: this.state.books,\n        handleSavedButton: this.handleSavedButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SearchBooks;\n}(Component);\n\nexport default SearchBooks;","map":{"version":3,"sources":["/Users/AnandsMAC/google-book-search/client/src/pages/SearchBooks.js"],"names":["React","Component","API","Jumbotron","Col","Row","Container","SearchForm","SearchResult","SearchBooks","state","search","books","author","error","message","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","getGoogleSearchBooks","then","res","data","items","Error","results","map","result","key","id","title","volumeInfo","authors","description","image","imageLinks","thumbnail","link","infoLink","catch","err","handleSavedButton","console","log","savedBooks","filter","book","saveBook","alert"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;IAEMC,W;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,MAAM,EAAE,EAHJ;AAIJC,MAAAA,KAAK,EAAE,EAJH;AAKJC,MAAAA,OAAO,EAAE;AALL,K;;UASRC,iB,GAAoB,UAAAC,KAAK,EAAI;AACzB,YAAKC,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACH,K;;UAGDC,gB,GAAmB,UAAAJ,KAAK,EAAI;AACxBA,MAAAA,KAAK,CAACK,cAAN,GADwB,CAExB;;AACApB,MAAAA,GAAG,CAACqB,oBAAJ,CAAyB,MAAKb,KAAL,CAAWC,MAApC,EACKa,IADL,CACU,UAAAC,GAAG,EAAI;AACT,YAAIA,GAAG,CAACC,IAAJ,CAASC,KAAT,KAAmB,OAAvB,EAAgC;AAC5B,gBAAM,IAAIC,KAAJ,CAAUH,GAAG,CAACC,IAAJ,CAASC,KAAnB,CAAN;AACH,SAFD,MAEO;AACH;AACA,cAAIE,OAAO,GAAGJ,GAAG,CAACC,IAAJ,CAASC,KAAvB,CAFG,CAGH;;AACAE,UAAAA,OAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,UAAAC,MAAM,EAAI;AAC5B;AACAA,YAAAA,MAAM,GAAG;AACLC,cAAAA,GAAG,EAAED,MAAM,CAACE,EADP;AAELA,cAAAA,EAAE,EAAEF,MAAM,CAACE,EAFN;AAGLC,cAAAA,KAAK,EAAEH,MAAM,CAACI,UAAP,CAAkBD,KAHpB;AAILrB,cAAAA,MAAM,EAAEkB,MAAM,CAACI,UAAP,CAAkBC,OAJrB;AAKLC,cAAAA,WAAW,EAAEN,MAAM,CAACI,UAAP,CAAkBE,WAL1B;AAMLC,cAAAA,KAAK,EAAEP,MAAM,CAACI,UAAP,CAAkBI,UAAlB,CAA6BC,SAN/B;AAOLC,cAAAA,IAAI,EAAEV,MAAM,CAACI,UAAP,CAAkBO;AAPnB,aAAT;AASA,mBAAOX,MAAP;AACH,WAZS,CAAV,CAJG,CAiBH;;AACA,gBAAKb,QAAL,CAAc;AAAEN,YAAAA,KAAK,EAAEiB,OAAT;AAAkBf,YAAAA,KAAK,EAAE;AAAzB,WAAd;AACH;AACJ,OAxBL,EAyBK6B,KAzBL,CAyBW,UAAAC,GAAG;AAAA,eAAI,MAAK1B,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE8B,GAAG,CAACjB;AAAb,SAAd,CAAJ;AAAA,OAzBd;AA0BH,K;;UAGDkB,iB,GAAoB,UAAA5B,KAAK,EAAI;AACzB;AACAA,MAAAA,KAAK,CAACK,cAAN;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKrC,KAAL,CAAWE,KAAvB;;AACA,UAAIoC,UAAU,GAAG,MAAKtC,KAAL,CAAWE,KAAX,CAAiBqC,MAAjB,CAAwB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACjB,EAAL,KAAYhB,KAAK,CAACE,MAAN,CAAac,EAA7B;AAAA,OAA5B,CAAjB;;AACAe,MAAAA,UAAU,GAAGA,UAAU,CAAC,CAAD,CAAvB;AACA9C,MAAAA,GAAG,CAACiD,QAAJ,CAAaH,UAAb,EACKxB,IADL,CACU,MAAKN,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAEqC,KAAK,CAAC,oBAAD;AAAhB,OAAd,CADV,EAEKT,KAFL,CAEW,UAAAC,GAAG;AAAA,eAAIE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAAJ;AAAA,OAFd;AAGH,K;;;;;;;6BAEQ;AACL,aACI,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFJ,CADJ,EAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,gBAAgB,EAAE,KAAKvB,gBAD3B;AAEI,QAAA,iBAAiB,EAAE,KAAKL,iBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CALJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAgBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AACI,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,KADtB;AAEI,QAAA,iBAAiB,EAAE,KAAKiC,iBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAhBJ,CADJ;AAyBH;;;;EApFqB5C,S;;AAuF1B,eAAeQ,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from '../utils/API'\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResult from \"../components/SearchResult\";\n\nclass SearchBooks extends Component {\n    state = {\n        search: \"\",\n        books: [],\n        author: \"\",\n        error: \"\",\n        message: \"\"\n    };\n\n    //function to take value on the search bar input\n    handleInputChange = event => {\n        this.setState({ search: event.target.value });\n    };\n\n    //function for submit button to trigger the value of the search form\n    handleFormSubmit = event => {\n        event.preventDefault();\n        // once it clicks it connects to the google book api with the search value\n        API.getGoogleSearchBooks(this.state.search)\n            .then(res => {\n                if (res.data.items === \"error\") {\n                    throw new Error(res.data.items);\n                } else {\n                    // store response in a array\n                    let results = res.data.items;\n                    //map through the array\n                    results = results.map(result => {\n                        //store each book information in a new object\n                        result = {\n                            key: result.id,\n                            id: result.id,\n                            title: result.volumeInfo.title,\n                            author: result.volumeInfo.authors,\n                            description: result.volumeInfo.description,\n                            image: result.volumeInfo.imageLinks.thumbnail,\n                            link: result.volumeInfo.infoLink\n                        };\n                        return result;\n                    });\n                    // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n                    this.setState({ books: results, error: \"\" });\n                }\n            })\n            .catch(err => this.setState({ error: err.items }));\n    };\n\n    //function to save the books\n    handleSavedButton = event => {\n        //console.log(event)\n        event.preventDefault();\n        console.log(this.state.books);\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\n        savedBooks = savedBooks[0];\n        API.saveBook(savedBooks)\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\n            .catch(err => console.log(err))\n    };\n\n    render() {\n        return (\n            <Container fluid>\n                <Jumbotron>\n                    <h1 className=\"text-white\">(React) Google Books Search</h1>\n                    <h3 className=\"text-white\">Search for and Save Books of Interest</h3>\n                </Jumbotron>\n                <Container>\n                    <Row>\n                        <Col size=\"12\">\n                            <SearchForm\n                                handleFormSubmit={this.handleFormSubmit}\n                                handleInputChange={this.handleInputChange}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <br></br>\n                <Container>\n                    <SearchResult\n                        books={this.state.books}\n                        handleSavedButton={this.handleSavedButton}\n                    />\n                </Container>\n            </Container>\n        );\n    }\n}\n\nexport default SearchBooks;\n"]},"metadata":{},"sourceType":"module"}